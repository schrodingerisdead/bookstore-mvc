@model BookStore.Models.Book

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.YearPublished)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.YearPublished)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NumPages)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NumPages)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Publisher)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Publisher)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.FrontPage)
        </dt>
        <dd class = "col-sm-10">
            @if (!string.IsNullOrEmpty(Model.FrontPage))
            {
                <img src="@Url.Content(@Model.FrontPage)" alt="Front Page Image" style="max-width: 200px;">
            }
        </dd>
        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DownloadUrl)
            </dt>
            <dd class="col-sm-10">
                @if (!string.IsNullOrEmpty(Model.DownloadUrl))
                {
                    
                        <a href="@Model.DownloadUrl" download>Download book</a>
                    
                }
            </dd>
        }
        @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
        {
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.DownloadUrl)
            </dt>
            <dd class = "col-sm-10">
                @if (!string.IsNullOrEmpty(Model.DownloadUrl))
                {
                    @if (ViewBag.HasPurchased == true)
                    {
                        <a href="@Model.DownloadUrl" download>Download book</a>
                    }
                }
            </dd>
        }
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @if (Model.AuthorId != null)
            {
                <a asp-controller="Authors" asp-action="Details" asp-route-id="@Model.AuthorId">@Html.DisplayFor(model => model.Author.FullName)</a>
            }
        </dd>
        <dt class="col-sm-2">
            <div>Average Rating</div>
        </dt>
        <dd class="col-sm-10">
            @if (ViewBag.AverageRating != null)
            {
                <div>
                    @ViewBag.AverageRating.ToString("0.00")
                </div>
            }
        </dd>
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    }
    |
    <a asp-action="Index">Back to List</a>
</div>
@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
{
    <form asp-action="Buy">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Buy Book" class="btn btn-primary" />
    </form>
}
<br />
<h4>Reviews</h4>
<hr />

@foreach (var item in Model.Reviews)
{
    <div class="card">
        <div class="card-header">
            <h4>
            @Html.DisplayFor(modelItem => item.AppUser)
        </h4>
        <h5>Rating: @Html.DisplayFor(modelItem => item.Rating)</h5>
         </div>
        <p class="card-body">@Html.DisplayFor(modelItem => item.Comment)</p>
    </div>
    <br>
 
}
</div>
